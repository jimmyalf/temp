//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spinit.Wpc.Synologen.OPQ.Business {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ErrorText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Spinit.Wpc.Synologen.OPQ.Business.ErrorText", typeof(ErrorText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change of node not allowed.
        /// </summary>
        internal static string DocumentErrors_CangeOfNodeNotAllowed {
            get {
                return ResourceManager.GetString("DocumentErrors_CangeOfNodeNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change of concern not allowed.
        /// </summary>
        internal static string DocumentErrors_ChangeOfConcernNotAllowed {
            get {
                return ResourceManager.GetString("DocumentErrors_ChangeOfConcernNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are not allowed to change document type.
        /// </summary>
        internal static string DocumentErrors_ChangeOfDocumentTypeNotAllowed {
            get {
                return ResourceManager.GetString("DocumentErrors_ChangeOfDocumentTypeNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change of shop not allowed.
        /// </summary>
        internal static string DocumentErrors_ChangeOfShopNotAllowed {
            get {
                return ResourceManager.GetString("DocumentErrors_ChangeOfShopNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The document is locked by an other user.
        /// </summary>
        internal static string DocumentErrors_DocumentLockedByOtherUser {
            get {
                return ResourceManager.GetString("DocumentErrors_DocumentLockedByOtherUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The node can not be changed..
        /// </summary>
        internal static string FileErrors_CangeOfNodeNotAllowed {
            get {
                return ResourceManager.GetString("FileErrors_CangeOfNodeNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The concern can not be changed..
        /// </summary>
        internal static string FileErrors_ChangeOfConcernNotAllowed {
            get {
                return ResourceManager.GetString("FileErrors_ChangeOfConcernNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file category can not be changed..
        /// </summary>
        internal static string FileErrors_ChangeOfFileCategoryNotAllowed {
            get {
                return ResourceManager.GetString("FileErrors_ChangeOfFileCategoryNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shop can not be changed..
        /// </summary>
        internal static string FileErrors_ChangeOfShopNotAllowed {
            get {
                return ResourceManager.GetString("FileErrors_ChangeOfShopNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The category already exists..
        /// </summary>
        internal static string FileErrors_FileCategoryExist {
            get {
                return ResourceManager.GetString("FileErrors_FileCategoryExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The category has connected files and can not be deleted..
        /// </summary>
        internal static string FileErrors_FileCategoryInUse {
            get {
                return ResourceManager.GetString("FileErrors_FileCategoryInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file is locked by an other user..
        /// </summary>
        internal static string FileErrors_FileLockedByOtherUser {
            get {
                return ResourceManager.GetString("FileErrors_FileLockedByOtherUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have choosen a invalid position..
        /// </summary>
        internal static string FileErrors_MoveToForbidden {
            get {
                return ResourceManager.GetString("FileErrors_MoveToForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to specify a new position for the node..
        /// </summary>
        internal static string FileErrors_PositionNotMoved {
            get {
                return ResourceManager.GetString("FileErrors_PositionNotMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current node can not move to the selected destination..
        /// </summary>
        internal static string NodeErrors_MoveToForbidden {
            get {
                return ResourceManager.GetString("NodeErrors_MoveToForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the node already exists. The node needs to be unique..
        /// </summary>
        internal static string NodeErrors_NameExist {
            get {
                return ResourceManager.GetString("NodeErrors_NameExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The node is checked out by another user..
        /// </summary>
        internal static string NodeErrors_NodeLockedByOtherUser {
            get {
                return ResourceManager.GetString("NodeErrors_NodeLockedByOtherUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parent of the node does not exist.
        /// </summary>
        internal static string NodeErrors_ParentDoesNotExist {
            get {
                return ResourceManager.GetString("NodeErrors_ParentDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to choose a new position for the node..
        /// </summary>
        internal static string NodeErrors_PositionNotMoved {
            get {
                return ResourceManager.GetString("NodeErrors_PositionNotMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User does not exists..
        /// </summary>
        internal static string UserErrors_NoCurrentExist {
            get {
                return ResourceManager.GetString("UserErrors_NoCurrentExist", resourceCulture);
            }
        }
    }
}
