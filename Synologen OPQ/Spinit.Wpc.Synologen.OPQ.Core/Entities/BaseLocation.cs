#pragma warning disable 1591

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Spinit's LINQ to SQL template for T4 C#
//     Generated at 06/04/2012 12:03:11
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Spinit.Wpc.Synologen.OPQ.Core.Entities
{	
	public class BaseLocation
	{
		#region Column Mappings
		
		public int Id { get; set; }
		
		public string Name { get; set; }
		
		public string Description { get; set; }
		
		public bool? AllowCrossPublishing { get; set; }
		
		public string InfoName { get; set; }
		
		public string InfoAdress { get; set; }
		
		public string InfoVisitAdress { get; set; }
		
		public string InfoZipCode { get; set; }
		
		public string InfoCity { get; set; }
		
		public string InfoPhone { get; set; }
		
		public string InfoFax { get; set; }
		
		public string InfoEmail { get; set; }
		
		public string InfoCopyRightInfo { get; set; }
		
		public string InfoWebMaster { get; set; }
		
		public string Alias1 { get; set; }
		
		public string Alias2 { get; set; }
		
		public string Alias3 { get; set; }
		
		public string PublishPath { get; set; }
		
		public string RelativePath { get; set; }
		
		public string SitePath { get; set; }
		
		public bool? PublishActive { get; set; }
		
		public bool? FtpPublishActive { get; set; }
		
		public bool? FtpPassive { get; set; }
		
		public string FtpUserName { get; set; }
		
		public string FtpPassword { get; set; }
		
		public string FtpSite { get; set; }
		
		public bool? Extranet { get; set; }
		
		public int DocType { get; set; }
		
		public int DocSubType { get; set; }
		
		public int FrontType { get; set; }
		
		#endregion
		
		#region Associations
		
		public List<BaseUser> BaseUsers { get; set; }
		
		#endregion
		
		#region Overrides
		
		/// <summary>
		/// Returnes the string representation of this class.
		/// </summary>
		/// <returns>The string.</returns>

		public override string ToString ()
		{
			string str = string.Empty;
				 				  
			str += string.Concat (Name, " ") ?? string.Empty;
				  
			str += string.Concat (Description, " ") ?? string.Empty;
				 				  
			str += string.Concat (InfoName, " ") ?? string.Empty;
				  
			str += string.Concat (InfoAdress, " ") ?? string.Empty;
				  
			str += string.Concat (InfoVisitAdress, " ") ?? string.Empty;
				  
			str += string.Concat (InfoZipCode, " ") ?? string.Empty;
				  
			str += string.Concat (InfoCity, " ") ?? string.Empty;
				  
			str += string.Concat (InfoPhone, " ") ?? string.Empty;
				  
			str += string.Concat (InfoFax, " ") ?? string.Empty;
				  
			str += string.Concat (InfoEmail, " ") ?? string.Empty;
				  
			str += string.Concat (InfoCopyRightInfo, " ") ?? string.Empty;
				  
			str += string.Concat (InfoWebMaster, " ") ?? string.Empty;
				  
			str += string.Concat (Alias1, " ") ?? string.Empty;
				  
			str += string.Concat (Alias2, " ") ?? string.Empty;
				  
			str += string.Concat (Alias3, " ") ?? string.Empty;
				  
			str += string.Concat (PublishPath, " ") ?? string.Empty;
				  
			str += string.Concat (RelativePath, " ") ?? string.Empty;
				  
			str += string.Concat (SitePath, " ") ?? string.Empty;
				 				 				 				  
			str += string.Concat (FtpUserName, " ") ?? string.Empty;
				  
			str += string.Concat (FtpPassword, " ") ?? string.Empty;
				  
			str += string.Concat (FtpSite, " ") ?? string.Empty;
				 				 				 				 
			return str.Length > 1 ? str.Substring(0, str.Length - 1) : str;
		}		
		
		/// <summary>
		/// Overrides the equals base method.
		/// </summary>
		/// <param name="o">The compare object.</param>
		/// <returns>If match, true.</returns>

		public override bool Equals (object o)
		{
			if (!(o is BaseLocation )) {
				return false;
			}

			BaseLocation eq = o as BaseLocation;

			return Id == eq.Id;
		}

		/// <summary>
		/// Overrides the GetHashCode base method.
		/// </summary>
		/// <returns>The hash-code for this object.</returns>

		public override int GetHashCode ()
		{
			return Id.GetHashCode ();
		}

		#endregion
	}
}
#pragma warning restore 1591
