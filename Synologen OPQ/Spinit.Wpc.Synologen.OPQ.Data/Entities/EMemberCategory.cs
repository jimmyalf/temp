#pragma warning disable 1591

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Spinit's LINQ to SQL template for T4 C#
//     Generated at 10/27/2009 15:39:30
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq.Expressions;

using Spinit.Data.Linq;

using Spinit.Wpc.Synologen.OPQ.Core.Entities;

namespace Spinit.Wpc.Synologen.OPQ.Data.Entities
{	
	[Table(Name=@"dbo.tblMemberCategories")]
	public partial class EMemberCategory : EntityBase
	{
		#region Spinit search extension
		
		/// <summary>
		/// Creates a lambda-expression for use with the data-load-option feature,
		/// </summary>
		/// <param name="property">The property to search-for.</param>
		/// <returns>A lambda-expression.</returns>

		public override LambdaExpression BuildSearchExpression (string property)
		{
			ParameterExpression parameter = Expression.Parameter (GetType (), "eMemberCategory");
			return Expression.Lambda<Func<EMemberCategory, object>> (
						Expression.Property (parameter, property),
						parameter);
		}
		
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(ChangeAction action);
		partial void OnCreated();
		#endregion

		#region Construction
		public EMemberCategory()
		{
			_tblSynologenShopCategoryMemberCategoryConnections = new EntitySet<EShopCategoryMemberCategoryConnection>(AttachShopCategoryMemberCategoryConnections, DetachShopCategoryMemberCategoryConnections);
			OnCreated();
		}
		#endregion

		#region Column Mappings
		partial void OnIdChanging(int value);
		partial void OnIdChanged();
		private int _Id;
		[Column(Storage=@"_Id", Name=@"cId", AutoSync=AutoSync.OnInsert, DbType=@"Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get { return _Id; }
			set {
				if (_Id != value) {
					OnIdChanging(value);
					SendPropertyChanging();
					_Id = value;
					SendPropertyChanged("Id");
					OnIdChanged();
				}
			}
		}
		
		partial void OnNameStringIdChanging(int? value);
		partial void OnNameStringIdChanged();
		private int? _NameStringId;
		[Column(Storage=@"_NameStringId", Name=@"cNameStringId", DbType=@"Int")]
		public int? NameStringId
		{
			get { return _NameStringId; }
			set {
				if (_NameStringId != value) {
					OnNameStringIdChanging(value);
					SendPropertyChanging();
					_NameStringId = value;
					SendPropertyChanged("NameStringId");
					OnNameStringIdChanged();
				}
			}
		}
		
		partial void OnOrderIdChanging(int? value);
		partial void OnOrderIdChanged();
		private int? _OrderId;
		[Column(Storage=@"_OrderId", Name=@"cOrderId", DbType=@"Int")]
		public int? OrderId
		{
			get { return _OrderId; }
			set {
				if (_OrderId != value) {
					OnOrderIdChanging(value);
					SendPropertyChanging();
					_OrderId = value;
					SendPropertyChanged("OrderId");
					OnOrderIdChanged();
				}
			}
		}
		
		partial void OnBaseGroupIdChanging(int? value);
		partial void OnBaseGroupIdChanged();
		private int? _BaseGroupId;
		[Column(Storage=@"_BaseGroupId", Name=@"cBaseGroupId", DbType=@"Int")]
		public int? BaseGroupId
		{
			get { return _BaseGroupId; }
			set {
				if (_BaseGroupId != value) {
					OnBaseGroupIdChanging(value);
					SendPropertyChanging();
					_BaseGroupId = value;
					SendPropertyChanged("BaseGroupId");
					OnBaseGroupIdChanged();
				}
			}
		}
		
		#endregion
		
		#region Associations
		private EntitySet<EShopCategoryMemberCategoryConnection> _tblSynologenShopCategoryMemberCategoryConnections;
		[Association(Name=@"tblMemberCategory_tblSynologenShopCategoryMemberCategoryConnection", Storage=@"_tblSynologenShopCategoryMemberCategoryConnections", ThisKey=@"Id", OtherKey=@"MemberCategoryId")]
		public EntitySet<EShopCategoryMemberCategoryConnection> ShopCategoryMemberCategoryConnections
		{
			get {
				return _tblSynologenShopCategoryMemberCategoryConnections;
			}
			set {
				_tblSynologenShopCategoryMemberCategoryConnections.Assign(value);
			}
		}

		private void AttachShopCategoryMemberCategoryConnections(EShopCategoryMemberCategoryConnection entity)
		{
			SendPropertyChanging();
			entity.MemberCategory = this;
		}
		
		private void DetachShopCategoryMemberCategoryConnections(EShopCategoryMemberCategoryConnection entity)
		{
			SendPropertyChanging();
			entity.MemberCategory = null;
		}
		#endregion

		#region Converters
		
		/// <summary>
		/// Converts from EMemberCategory to MemberCategory.
		/// </summary>
		/// <param name="eMemberCategory">The EMemberCategory.</param>
		/// <returns>The converted MemberCategory.</returns>

		public static MemberCategory Convert (EMemberCategory eMemberCategory)
		{
			MemberCategory memberCategory = new MemberCategory
			{
				Id = eMemberCategory.Id,
				NameStringId = eMemberCategory.NameStringId,
				OrderId = eMemberCategory.OrderId,
				BaseGroupId = eMemberCategory.BaseGroupId,
			};
			
			return memberCategory;
		}
		
		/// <summary>
		/// Converts from MemberCategory to EMemberCategory.
		/// </summary>
		/// <param name="memberCategory">The MemberCategory.</param>
		/// <returns>The converted EMemberCategory.</returns>

		public static EMemberCategory Convert (MemberCategory memberCategory)
		{		
			return new EMemberCategory
			{
				Id = memberCategory.Id,
				NameStringId = memberCategory.NameStringId,
				OrderId = memberCategory.OrderId,
				BaseGroupId = memberCategory.BaseGroupId,
			};
		}

		#endregion
	}
}
#pragma warning restore 1591
