#pragma warning disable 1591

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Spinit's LINQ to SQL template for T4 C#
//     Generated at 06/04/2012 12:03:10
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq.Expressions;

using Spinit.Data.Linq;

using Spinit.Wpc.Synologen.OPQ.Core.Entities;

namespace Spinit.Wpc.Synologen.OPQ.Data.Entities
{	
	[Table(Name=@"dbo.tblSynologenShopMemberConnection")]
	public partial class EShopMemberConnection : EntityBase
	{
		#region Spinit search extension
		
		/// <summary>
		/// Creates a lambda-expression for use with the data-load-option feature,
		/// </summary>
		/// <param name="property">The property to search-for.</param>
		/// <returns>A lambda-expression.</returns>

		public override LambdaExpression BuildSearchExpression (string property)
		{
			ParameterExpression parameter = Expression.Parameter (GetType (), "eShopMemberConnection");
			return Expression.Lambda<Func<EShopMemberConnection, object>> (
						Expression.Property (parameter, property),
						parameter);
		}
		
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(ChangeAction action);
		partial void OnCreated();
		#endregion

		#region Construction
		public EShopMemberConnection()
		{
			_tblMember = default(EntityRef<EMember>); 
			_tblSynologenShop = default(EntityRef<EShop>); 
			OnCreated();
		}
		#endregion

		#region Column Mappings
		partial void OnSynologenShopIdChanging(int value);
		partial void OnSynologenShopIdChanged();
		private int _SynologenShopId;
		[Column(Storage=@"_SynologenShopId", Name=@"cSynologenShopId", DbType=@"Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int SynologenShopId
		{
			get { return _SynologenShopId; }
			set {
				if (_SynologenShopId != value) {
					if (_tblSynologenShop.HasLoadedOrAssignedValue) {
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					OnSynologenShopIdChanging(value);
					SendPropertyChanging();
					_SynologenShopId = value;
					SendPropertyChanged("SynologenShopId");
					OnSynologenShopIdChanged();
				}
			}
		}
		
		partial void OnMemberIdChanging(int value);
		partial void OnMemberIdChanged();
		private int _MemberId;
		[Column(Storage=@"_MemberId", Name=@"cMemberId", DbType=@"Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int MemberId
		{
			get { return _MemberId; }
			set {
				if (_MemberId != value) {
					if (_tblMember.HasLoadedOrAssignedValue) {
						throw new ForeignKeyReferenceAlreadyHasValueException();
					}
					OnMemberIdChanging(value);
					SendPropertyChanging();
					_MemberId = value;
					SendPropertyChanged("MemberId");
					OnMemberIdChanged();
				}
			}
		}
		
		#endregion
		
		#region Associations
		private EntityRef<EMember> _tblMember;
		[Association(Name=@"tblMember_tblSynologenShopMemberConnection", Storage=@"_tblMember", ThisKey=@"MemberId", OtherKey=@"Id", IsForeignKey=true)]
		public EMember Member
		{
			get {
				return _tblMember.Entity;
			}
			set {
				EMember previousValue = _tblMember.Entity;
				if ((previousValue != value) || (!_tblMember.HasLoadedOrAssignedValue)) {
					SendPropertyChanging();
					if (previousValue != null) {
						_tblMember.Entity = null;
						previousValue.ShopMemberConnections.Remove(this);
					}
					_tblMember.Entity = value;
					if (value != null) {
						value.ShopMemberConnections.Add(this);
						_MemberId = value.Id;
					}
					else {
						_MemberId = default(int);
					}
					SendPropertyChanged("Member");
				}
			}
		}

		private EntityRef<EShop> _tblSynologenShop;
		[Association(Name=@"tblSynologenShop_tblSynologenShopMemberConnection", Storage=@"_tblSynologenShop", ThisKey=@"SynologenShopId", OtherKey=@"Id", IsForeignKey=true)]
		public EShop Shop
		{
			get {
				return _tblSynologenShop.Entity;
			}
			set {
				EShop previousValue = _tblSynologenShop.Entity;
				if ((previousValue != value) || (!_tblSynologenShop.HasLoadedOrAssignedValue)) {
					SendPropertyChanging();
					if (previousValue != null) {
						_tblSynologenShop.Entity = null;
						previousValue.ShopMemberConnections.Remove(this);
					}
					_tblSynologenShop.Entity = value;
					if (value != null) {
						value.ShopMemberConnections.Add(this);
						_SynologenShopId = value.Id;
					}
					else {
						_SynologenShopId = default(int);
					}
					SendPropertyChanged("Shop");
				}
			}
		}

		#endregion

		#region Converters
		
		/// <summary>
		/// Converts from EShopMemberConnection to ShopMemberConnection.
		/// </summary>
		/// <param name="eShopMemberConnection">The EShopMemberConnection.</param>
		/// <returns>The converted ShopMemberConnection.</returns>

		public static ShopMemberConnection Convert (EShopMemberConnection eShopMemberConnection)
		{
			ShopMemberConnection shopMemberConnection = new ShopMemberConnection
			{
				SynologenShopId = eShopMemberConnection.SynologenShopId,
				MemberId = eShopMemberConnection.MemberId,
			};
			
			return shopMemberConnection;
		}
		
		/// <summary>
		/// Converts from ShopMemberConnection to EShopMemberConnection.
		/// </summary>
		/// <param name="shopMemberConnection">The ShopMemberConnection.</param>
		/// <returns>The converted EShopMemberConnection.</returns>

		public static EShopMemberConnection Convert (ShopMemberConnection shopMemberConnection)
		{		
			return new EShopMemberConnection
			{
				SynologenShopId = shopMemberConnection.SynologenShopId,
				MemberId = shopMemberConnection.MemberId,
			};
		}

		#endregion
	}
}
#pragma warning restore 1591
